DROP TABLE CUS_LEVEL;
DROP TABLE CUSTOMER;
DROP SEQUENCE CUS_SEQ;
CREATE SEQUENCE CUS_SEQ
        START WITH 1
        INCREMENT BY 1
        MAXVALUE 999999
        MINVALUE 1
        NOCYCLE
        NOCACHE;

CREATE TABLE CUS_LEVEL(
        LEVELNO NUMBER(1) PRIMARY KEY,
        LOW NUMBER(15),
        HIGH NUMBER(15),
        LEVELNAME VARCHAR2(100) NOT NULL
);

CREATE TABLE CUSTOMER(
        CID NUMBER(6) PRIMARY KEY,
        CTEL VARCHAR2(100) NOT NULL UNIQUE,
        CNAME VARCHAR2(100) NOT NULL,
        CPOINT NUMBER(10) DEFAULT 1000,
        CAMOUNT NUMBER(15) DEFAULT 0,
        LEVELNO NUMBER(1)  DEFAULT 1 REFERENCES CUS_LEVEL(LEVELNO) NOT NULL
);


INSERT INTO CUS_LEVEL VALUES (1,0,999999,'NORMAL');
INSERT INTO CUS_LEVEL VALUES (2,1000000,1999999,'SILVER');
INSERT INTO CUS_LEVEL VALUES (3,2000000,2999999,'GOLD');
INSERT INTO CUS_LEVEL VALUES (4,3000000,3999999,'VIP');
INSERT INTO CUS_LEVEL VALUES (5,4000000,999999999,'VVIP');

INSERT INTO CUSTOMER (CID,CTEL,CNAME) VALUES (CUS_SEQ.NEXTVAL,'010-9999-9999','홍길동');
INSERT INTO CUSTOMER VALUES (CUS_SEQ.NEXTVAL,'010-9999-8888','김길동',2000,4150000,5);
DELETE FROM CUSTOMER WHERE CNAME ='김길동';
COMMIT;
ROLLBACK;

SELECT * FROM CUS_LEVEL;
SELECT * FROM CUSTOMER;
SELECT CTEL FROM CUSTOMER WHERE CTEL LIKE '_______%9999';

-- query

-- 0. 레벨이름들 검색 : public Vector<String> getLevelNames()
SELECT LEVELNAME FROM CUS_LEVEL;
-- 1. cId로 검색 : public CustomerDto cIdGetCustomer(string cId)
SELECT CTEL, CNAME , CPOINT, CAMOUNT, LEVELNAME, (SELECT HIGH - CAMOUNT+1 FROM CUSTOMER WHERE CID = C.CID AND LEVELNO!=5) LVUP
        FROM CUSTOMER C, CUS_LEVEL L 
                WHERE C.LEVELNO=L.LEVELNO
                        AND CID=?;
-- 2. 폰뒤4자리(FULL) 검색 - CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 레벨업을 위한 쓸 돈
--    public ArrayList<CustomerDto> cTelGetCustomers(String cTel);
SELECT CID,CTEL,CNAME,CPOINT, CAMOUNT,LEVELNAME , (SELECT HIGH - CAMOUNT+1 FROM CUSTOMER WHERE CID = C.CID AND LEVELNO!=5) LVUP
        FROM CUSTOMER C, CUS_LEVEL L 
                WHERE C.LEVELNO = L.LEVELNO
                                        AND C.CTEL IN ((SELECT CTEL FROM CUSTOMER WHERE CTEL LIKE '_______%'||'8888') , '8888') ORDER BY CAMOUNT;
                                               

                                           

-- 3. 고객이름검색 - CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 레벨업을 위한 쓸 돈
--                       public ArrayList<CustomerDto> cNameGetCustomers(String cName);
SELECT CID, CTEL, CNAME , CPOINT, CAMOUNT, LEVELNAME,(SELECT HIGH - CAMOUNT+1 FROM CUSTOMER WHERE CID = C.CID AND LEVELNO!=5) LVUP
        FROM CUSTOMER C, CUS_LEVEL L 
                WHERE C.LEVELNO=L.LEVELNO
                                AND CNAME = '김길동';
-- 4. 포인트로만 구매(1000원짜리를 포인트로만 구매) : public int buyWithPoint(int cAmount, int cId)
UPDATE CUSTOMER SET CPOINT=CPOINT-CAMOUNT WHERE CID =1;
UPDATE CUSTOMER SET CPOINT=8000 WHERE CID =6;


-- 5. 물품구매 (1000000원짜리를 구매할 경우. 포인트는 구매금액의 5%)
    -- 물품구매시 UPDATE 2회 필요(구매누적금액 UPDATE와 LEVELNO UPDATE)
    --  public int buy(int cAmount, int cId)

UPDATE CUSTOMER SET CAMOUNT = CAMOUNT+1000000,CPOINT= CPOINT+1000000*0.05, 
        LEVELNO = (SELECT L.LEVELNO FROM CUSTOMER C, CUS_LEVEL L        
                WHERE CAMOUNT+1000000 BETWEEN LOW AND HIGH AND CID =1) 
                        WHERE CID = 1;    

UPDATE CUSTOMER SET LEVELNO = (SELECT L.LEVELNO FROM CUSTOMER C, CUS_LEVEL L WHERE CAMOUNT BETWEEN LOW AND HIGH AND CID =1) WHERE CID=1;     
    
    
-- 6. 등급별출력 - CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 레벨업을위한쓸돈
--              public ArrayList<CustomerDto> levelNameGetCustomers(String levelName)
SELECT CID ,CTEL,CNAME,CPOINT,CAMOUNT,LEVELNAME, (SELECT HIGH - CAMOUNT+1 FROM CUSTOMER WHERE CID = C.CID AND LEVELNO!=5) LVUP
         FROM CUSTOMER C, CUS_LEVEL L 
                WHERE C.LEVELNO=L.LEVELNO
                                AND LEVELNAME='VIP' ORDER BY CAMOUNT DESC;
-- 7.전체출력 - CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 레벨업을위한쓸돈
--            public ArrayList<CustomerDto> getCustomers()
SELECT CID ,CTEL,CNAME,CPOINT,CAMOUNT,LEVELNAME, (SELECT HIGH - CAMOUNT+1 FROM CUSTOMER WHERE CID = C.CID AND LEVELNO!=5) LVUP
         FROM CUSTOMER C, CUS_LEVEL L 
                WHERE C.LEVELNO=L.LEVELNO ORDER BY  CAMOUNT  DESC;


-- 8. 회원가입(고객전화와 고객이름은 입력받아 INSERT)
--          public int insertCustomer(String cTel, String cName)
INSERT INTO CUSTOMER (CID,CTEL,CNAME) VALUES (CUS_SEQ.NEXTVAL,'010-9999-9999','홍길동');
-- 9. 번호수정 : public int updateCustomer(String cTel, int cId)
UPDATE CUSTOMER SET CTEL = '010-9991-9999' WHERE CID =1;
-- 10. 회원탈퇴 : public int deleteCustomer(String cid)
DELETE FROM CUSTOMER WHERE CID =1;





