-- [x] VIEW, INLINE VIEW, TOP-N 구문
-- 1 . VIEW : 가상의 테이블          
-- (1) 단순뷰
CREATE OR REPLACE  VIEW EMPv0           
        AS  SELECT EMPNO, ENAME ,JOB, DEPTNO FROM EMP;  -- EMPv0라는 VIEW 생성 또는 수정 = EMP테이블 일부 필드를 갖는 가상의 테이블
SELECT * FROM EMPv0;
INSERT INTO EMPv0 VALUES (1111,'홍','IT',40);             -- VIEW 에 INSERT했지만 EMP 테이블에 적용됨.
SELECT * FROM EMPv0;
SELECT * FROM EMP;
UPDATE EMPv0 SET JOB = ' ANALYST' WHERE EMPNO = 1111;
DELETE FROM EMPv0 WHERE EMPNO=1111;
-- EMPv0이라는 VIEW  =  EMP의 30번 부서행만
CREATE OR REPLACE VIEW EMPv0
        AS SELECT * FROM EMP WHERE DEPTNO = 30;
SELECT * FROM EMPv0;
SELECT * FROM USER_VIEWS;               -- 데이터 딕셔너리 뷰를 확인
SELECT * FROM EMPv0;
INSERT INTO EMPv0 VALUES ( 1111,'홍',NULL,NULL,NULL,NULL,NULL,30);
SELECT * FROM EMPv0;
INSERT INTO EMPv0 VALUES ( 1112,'홍',NULL,NULL,NULL,NULL,NULL,40);       -- 입력은 가능하나 EMPv0에선 안보임
SELECT * FROM EMPv0;    -- 1111(30번 부서만)
SELECT * FROM EMP;      -- 1111,1112 다 나옴
DELETE FROM EMPv0 WHERE EMPNO<1113;             -- 30번 부서로 지정된 데이터만 삭제
DELETE FROM EMP WHERE EMPNO<1113;
COMMIT;
--      EMP 테이블 30번 부서의 가상의 테이블 (30번 부서만 INSERT 가능)
CREATE OR REPLACE VIEW EMPv0
        AS SELECT * FROM EMP WHERE DEPTNO = 30
                WITH CHECK OPTION;      -- VIEW의 제한조건

SELECT * FROM EMPv0;
INSERT INTO EMPv0  VALUES (1111,'홍',NULL,NULL,NULL,NULL,NULL,30);
INSERT INTO EMPv0  VALUES (1111,'홍',NULL,NULL,NULL,NULL,NULL,40);       -- CHECK OPTION 걸려있어 불가
DELETE FROM EMPv0 WHERE EMPNO=1111;

-- (2) 복합뷰
CREATE OR REPLACE VIEW EMPV1
        AS SELECT EMPNO,ENAME,JOB,DNAME FROM DEPT D , EMP E
                WHERE E.DEPTNO =D. DEPTNO;
SELECT * FROM EMPV1;
INSERT INTO EMPV1 VALUES (1111,'홍','SALESMAN','RESEARCH');      -- 복합는 INSERT가 불가능.
-- 복합뷰 포함 DML 명령어를 모두 사용할 수 없는 경우 (INSERT 불가)
CREATE OR REPLACE VIEW EMPV2 
        AS SELECT EMPNO, ENAME, DEPTNO FROM EMP
                WITH READ ONLY; -- 읽기 전용 VIEW . SELECT 만 가능함
SELECT * FROM EMPV2;
SELECT EMPNO,ENAME,DNAME FROM EMPV2 E, DEPT D
        WHERE E.DEPTNO=D.DEPTNO;
INSERT INTO EMPV2 VALUES (1111,'홍',40);         -- INSERT 불가
-- EMP(이름,급여) 
CREATE OR REPLACE VIEW EMPV3
        AS SELECT  ENAME , SAL FROM EMP;
SELECT * FROM EMPV3;
INSERT INTO EMPV3 VALUES ('홍',9000);    -- PRIMARY KEY는 NOT NULL이라 생성불가.
--EMP(사번,이름,연봉=SAL*12)
-- 서브쿼리의 필드명에 특수문자가 있을 경우 - 별칭을 바로주는 방법
CREATE OR REPLACE VIEW EMPV3
        AS SELECT EMPNO , ENAME ,SAL*12 YEARSAL  FROM EMP;      -- 필드명에는 특수문자가 들어갈 수 없기 때문에 별칭을 줘야함.
-- 서브쿼리의 필드명에 특수문자가 있을 경우 -  별칭을 따로두는 방법
CREATE OR REPLACE VIEW EMPV3    ( EMPNO,NAME,YEARSAL)
        AS SELECT EMPNO , ENAME ,SAL*12   FROM EMP;     -- 전체 테이블 별칭을 다 적어줘야함.
INSERT INTO EMPV3 VALUES (1115,'홍',12000);      -- VIEW 생성시 필드에 연산자가 있으면 INSERT 불가능.
-- EMP (사번 ,이름 ,반올림한 SAL)
CREATE OR REPLACE VIEW EMPV3
        AS SELECT EMPNO, ENAME , ROUND(SAL,-3) SAL FROM EMP;
SELECT * FROM EMPV3;
INSERT INTO EMPV3 VALUES (1115,'홍',1000);       -- VIEW 생성시 필드에 함수를 사용한 경우 INSERT 불가능.
-- 부서번호 ,최소급여 ,최대급여, 부서평균을 포함한 DEPTV1 VIEW 생성
CREATE OR REPLACE VIEW DEPTV1 (DEPTNO , MINSAL , MAXSAL , AVGSAL)
        AS  SELECT DEPTNO,MIN(SAL),MAX(SAL),ROUND(AVG(SAL),1) 
                FROM EMP GROUP BY  DEPTNO;              
INSERT INTO DEPTV1 VALUES (40,700,9000,4000);   -- VIEW 생성시 필드에 함수를 사용한 경우 INSERT 불가능.
SELECT * FROM DEPTV1;
-- 부서번호, 부서명 ,최소급여 ,최대급여 ,부서평균
SELECT DEPT.DEPTNO, DNAME , MINSAL ,MAXSAL ,AVGSAL 
        FROM DEPTV1, DEPT
                WHERE DEPTV1.DEPTNO=DEPT.DEPTNO;
DESC DEPTV1;
-- EMP(중복이 제거된 JOB , DEPTNO)
SELECT DISTINCT JOB , DEPTNO FROM EMP ORDER BY JOB;      -- 서브퀄
CREATE OR REPLACE VIEW EMPV3
        AS SELECT DISTINCT JOB , DEPTNO FROM EMP ORDER BY JOB;
SELECT * FROM EMPV3;
INSERT INTO EMPV3 VALUES ('CLERK',10);  -- VIEW 생성시 DISTINCT를 사용한 경우 DML 문장 불가능.

        
-- 2 . INLINE VIEW : SQL문 수행하는 한줄의 명령어에서만 유용한 뷰 , FROM절에 있는 서브쿼리를 지칭.
-- 급여가 2000을 초과하는 사원의 평균급여
SELECT AVG(SAL) FROM EMP WHERE SAL>2000;
SELECT AVG(SAL) FROM (SELECT * FROM EMP WHERE SAL>2000);
-- 이름 ,급여 ,부서번호 ,해당사원의 부서평균 급여( SELECT 절 서브쿼리 이용)
SELECT ENAME, SAL ,DEPTNO, (SELECT ROUND(AVG (SAL)) FROM EMP WHERE DEPTNO = E.DEPTNO) AVG 
        FROM EMP E;
-- 이름 ,급여 ,부서번호 ,해당사원의 부서평균 급여(INLINE VIEW 이용)
SELECT ENAME, SAL, DEPTNO FROM EMP;     -- (1)
SELECT DEPTNO ,ROUND(AVG(SAL)) FROM EMP GROUP BY DEPTNO;       -- (2)
SELECT ENAME ,SAL ,E.DEPTNO ,S.AVGSAL
        FROM EMP E,(SELECT DEPTNO ,ROUND(AVG(SAL)) AVGSAL FROM EMP GROUP BY DEPTNO) S
                WHERE E.DEPTNO=S.DEPTNO;
-- 이름, 급여 ,부서번호 ,해당사원의 부서평균 (부서평균보다 많이 받는 직원만)
SELECT ENAME ,SAL ,E.DEPTNO ,S.AVGSAL
        FROM EMP E,(SELECT DEPTNO ,ROUND(AVG(SAL)) AVGSAL FROM EMP GROUP BY DEPTNO) S
                WHERE E.DEPTNO=S.DEPTNO
                AND E.SAL>S.AVGSAL;

-- 3. TOP-N 구문 (TOP 1 ~ 10 등, TOP 11~20등 , TOP 6~ 10등)
-- ROWNUM : EMP 테이블에서 가져온 순서. 테이블에서 행의 논리적인 순서
SELECT ROWNUM, ENAME ,SAL FROM EMP WHERE DEPTNO=30;
SELECT ROWNUM, ENAME ,SAL  FROM EMP ORDER BY SAL;
SELECT ROWNUM, ENAME , SAL FROM (SELECT * FROM EMP ORDER BY SAL);
SELECT ROWNUM, ENAME ,SAL FROM (SELECT * FROM EMP ORDER BY SAL)
        WHERE ROWNUM<6; --1~5등 
SELECT ROWNUM, ENAME ,SAL FROM (SELECT * FROM EMP ORDER BY SAL)
        WHERE ROWNUM BETWEEN 6 AND 10;   -- 6~10등 나올 것 같지만 안나옴.
-- 함수를 이용한 RANK 출력
SELECT RANK() OVER(ORDER BY SAL) RANK,
        DENSE_RANK() OVER (ORDER BY SAL) D_RANK,
        ROW_NUMBER() OVER (ORDER BY SAL) N_RANK,
        ENAME ,SAL
        FROM EMP;
-- TOP-N 구문
SELECT ROWNUM,ENAME, SAL
        FROM (SELECT * FROM EMP ORDER BY SAL)
        WHERE ROWNUM BETWEEN 1 AND 5;  -- TOP 6~10등은 불가
SELECT RN,ENAME,SAL
        FROM (SELECT ROWNUM RN, ENAME , SAL
                FROM (SELECT *  FROM EMP ORDER BY SAL DESC))
        WHERE RN BETWEEN 6 AND 10;      -- TOP-N 구문
-- 이름 알파벳 순서대로 6~10등 까지 출력(이름,사번 ,JOB,MGR,HIREDATE
SELECT RN , ENAME,EMPNO,JOB,MGR,HIREDATE
        FROM (SELECT ROWNUM RN, ENAME,EMPNO,JOB,MGR,HIREDATE
                FROM (SELECT * FROM EMP ORDER BY ENAME))
        WHERE RN BETWEEN 6 AND 10;


-- <총 연습문제>
-- 1. 부서명과 사원명을 출력하는 용도의 뷰, DNAME_ENAME_VU 를 작성하시오
CREATE OR REPLACE VIEW DNAME_ENAME_VU
        AS SELECT DNAME, ENAME FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO
        WITH READ ONLY;
SELECT * FROM DNAME_ENAME_VU;

-- 2. 사원명과 직속상관명을 출력하는 용도의 뷰,  WORKER_MANAGER_VU를 작성하시오
CREATE OR REPLACE VIEW WORKER_MANAGER_VU
        AS SELECT W.ENAME WNAME, M.ENAME MNAME FROM EMP W, EMP M 
        WHERE W.MGR=M.EMPNO
        WITH READ ONLY;
SELECT * FROM WORKER_MANAGER_VU;
        
-- 3. 부서별 급여합계 등수를 출력하시오(부서번호, 급여합계, 등수) ? 친구출제
SELECT DEPTNO,SSAL, ROWNUM RANK
        FROM (SELECT DEPTNO ,SUM(SAL) SSAL FROM EMP GROUP BY DEPTNO ORDER BY SSAL DESC) ;
                        
-- 3-1. 부서별 급여합계 등수가 2~3등인 부서번호, 급여합계, 등수를 출력하시오.
SELECT DEPTNO, SSAL, RANK
        FROM(SELECT DEPTNO,SSAL, ROWNUM RANK
                FROM (SELECT DEPTNO ,SUM(SAL) SSAL FROM EMP GROUP BY DEPTNO ORDER BY SSAL DESC)) 
        WHERE RANK BETWEEN 2 AND 3;
        
-- 4. 사원테이블에서 사번, 사원명, 입사일을 입사일이 최신에서 오래된 사원 순으로 정렬하시오
SELECT EMPNO, ENAME, HIREDATE
        FROM EMP ORDER BY HIREDATE DESC;
        
-- 5. 사원테이블에서 사번, 사원명, 입사일을 입사일이 최신에서 오래된 사원 5명을 출력하시오
SELECT RN, EMPNO, ENAME,HIREDATE
        FROM(SELECT ROWNUM RN,EMPNO,ENAME,HIREDATE
                FROM(SELECT EMPNO, ENAME, HIREDATE
                                 FROM EMP ORDER BY HIREDATE DESC))
        WHERE RN BETWEEN 1 AND 5;
        
-- 6. 사원 테이블에서 사번, 사원명, 입사일을 최신부터 오래된 순으로 6번째로 늦은 사원부터 10번째 사원까지 
SELECT RN, EMPNO, ENAME,HIREDATE
        FROM(SELECT ROWNUM RN,EMPNO,ENAME,HIREDATE
                FROM(SELECT EMPNO, ENAME, HIREDATE
                                 FROM EMP ORDER BY HIREDATE DESC))
        WHERE RN BETWEEN 6 AND 10;


























