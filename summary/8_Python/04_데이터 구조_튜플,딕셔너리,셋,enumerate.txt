// 튜플,딕셔너리,셋,enumerate

	1 . 튜플  - 속도가 빨라 수정이 필요없는 배열 형태의 데이터 타입에 사용
		- 데이터를 수정할 수 없기 때문에 제공되는 함수가 많지 않다.
		- ( ) 소괄호를 이용해서 만든다.
	
	2. 튜플 함수 
		- tupleData = ( ) : 튜플을 만드는 함수
		- len(data) : 튜플의 항목 수를 반환
		- min,max : 최소값,최대값 반환
		- count(x) : x의 개수를 반환
		- index( x , p) : p위치 이후에 x가 있는 인덱스 반환

	3. 딕셔너리 
		- 중괄호 {} 를 이용해서 딕셔너리 생성. 키(key)-값(value)의 쌍으로 구성된 자료구조.
		- 키는 유일한 값(중복허용안함),키(key)에 리스트는 사용불가능.튜플은 가능
		- 값은 중복 가능. 모든 데이터 타입이 가능
		- 없는 키 값 참조하면 에러 발생. 인덱스를 이용한 참조는 지원안함

	4. 셋(SET)
		- 순서가 정해지지 않고, 중복을 허용하지 않는 집합. 중괄호{ }를 이용하여 정의.

	5. enumerate 
		- Java의 iterator와 유사한 개념으로 순서 객체를 인수로 받는다. 
		- Set, dictionary 같이 index가 없는 객체에 순서를 잡아 출력할 수 있게한다.
		- for문에 같이 쓰고 index객체를 따라 지정해서 받는다.
		- list같이 인덱스가 존재하는 객체에서도 사용은 가능하다. 


// 210223 kks