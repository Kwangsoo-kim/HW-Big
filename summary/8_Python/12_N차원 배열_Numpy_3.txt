// N차원 배열_Numpy

	1. split 	: 하나의 배열을 여러개의 작은 배열로 분할
		- vsplit(ary,indices or sections) : 첫번째 축을 따라 분할한다. 3차원 배열땐 열분할 
		- hsplit(ary,indices or sections) : 두번째 축을 따라 분할한다. 3차원 배열땐 행분할
		- dsplit(ary,indices or sections) : 세번째 차원을 나눈다.
		** array_split(ary,indices or sections,axis) : split과의 차이점은 축을 동일개수로 나눌 수 없는
			정수값도 사용 가능하다. 오류가 발생하지 않는다.

	2. 복사와 view 
		- 넘파이 배열 같은경우 = 부호로만 값을 할당하면 주소만 전달되기 때문에 한쪽 객체의 값이 바뀌면
		원본객체의 데이터도 변경된다
		- 그렇기 때문에 두가지 배열 복사 옵션이 존재한다
			- view : 언뜻 보면 복사된 객체로 보이지만 shape 부분만 따로 할당될뿐
			          데이터를 변경하면 원본객체도 변경된다. 완전한 복사가 아니다.
			- copy : 제대로 된 복사로, 주소값을 다르게 할당하여 전혀다른 객체가된다.

	3. 고급 인덱싱
		- 인덱스 배열로 인덱싱 : 배열내 데이터 값을 인덱스로 받아서 인덱싱 할 수 있다.
				      2차원 배열로 인덱싱하면, 반환값도 2차원 배열로 반환된다.
		- 인덱스의 단일 배열은 첫번째 차원을 참조한다.
		- 다차원 인덱싱 : 하나 이상의 차원에 대해 인덱스를 제공한다. 각 차원에 대한 인덱스 배열은 
			         동일한 모양이어야 한다.
		- argmax(axis) : asxis 값에 따라 축에 따라서 가장 큰값이 존재하는 데이터의 인덱스를 반환한다.
				0 은 열 기준으로,1은 행기준으로 나타낸다. 
		- 인덱싱을 이용한 값변경 : 배열을 대상으로 인덱싱을 사용한 값의 변경이 가능하다. 동일 인덱스를 
				포함할 경우 가장 마지막 값이 할당된다. += 연산자는 작동안될 수 도 있다.
		- 논리 배열을 이용한 인덱싱 : 논리 배열을 추출하여 해당 배열을 인덱싱값에 넣어 True값을 가지는 
			데이터만 추출할 수 있다. 
		- ix_( )함수 : N개의 1차원 시퀀스 배열을 입력받아 N차원 N개를 반환한다.
			결과의 모양은 1차원을 제외한 모든 차원이 1이다. 

 
// 210305 kks