// N차원 배열_Numpy

	1. 기본연산 동작
		- 배열의 요소별 연산 : 내용물 행렬간 요소별로 연산된다
		- 행렬의 곱(@,dot( )) : 행렬의 곱이 된다.
		- 복합대입연산자 : 행렬내에 데이터 타입이 상이하면 오류발생. 이점만 주의하면 사용가능
		- 배열 요소별 집계 : sum( ),min( ),max( ),... 등등 사용가능하다
		- 배열 축별 집계 : 배열 요소별 집계 함수내에 axis값을 넣어 출력 가능하다. 
		- 그 외 : sqrt( ), add( ), exp( ) 등이 있다. 		
		- 브로드 캐스팅 : 1차원 배열의 경우 제한없이 사용가능하다. 다만 2차원 배열의 경우
			         두배열의 후미 축(열)의 크기가 동일해야 된다. 이럴때  newaxis 연산자를 사용
			          배열에 새로운 임의로 축을 추가하여 브로드 캐스팅할 수 있다.
	
	2. 인덱싱과 슬라이싱
		- 인덱싱은 다른언어와 큰 차이가 없으며, 넘파이는 없는 인덱스만 실행하면 오류가 발생한다.
		- 슬라이싱 같은 경우도 다른 언어와 큰 차이가 없고 슬라이싱은 벗어난 인덱스 값을 기입해도
		있는만큼만 출력해준다. 
	
	3. stack - 배열을 쌓아 합치는 함수
		- vstack(tuple) : 아래(행)에 추가하는 방식으로 합친다.
		- hstack(tuple) : 옆(열)으로 추가하는 방식으로 합친다.
		- dstack(tuple) : 3번째 축을 합친다.	
		- column_stack(arys) : 1차원 배열을 열 단위로 배열하여 2차원 배열로 만든다.
		- rowstack(tuple) : vstack( )과 반환값이 같다.
		- stack(tuple,axis=0) : axis 속성에 따라 넘파이 배열을 합친다.
			- axis = 0 : 면으로 합친다.
			- axis = 1 : 행끼리 합친다.
			- axis = 2 : 행들을 열끼리 합친다.
		- r_(arys) : 1차원 배열을 행 단위로 나열한다.
		- c_(arys) : 열 단위로 데이터를 쌓아준다.  
	
// 210305 kks